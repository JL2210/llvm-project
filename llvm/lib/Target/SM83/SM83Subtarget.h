//===-- SM83Subtarget.h - Define Subtarget for the SM83 -------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the SM83 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_SM83_SM83SUBTARGET_H
#define LLVM_LIB_TARGET_SM83_SM83SUBTARGET_H

#include "SM83FrameLowering.h"
#include "SM83ISelLowering.h"
#include "SM83InstrInfo.h"

#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "SM83GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class SM83Subtarget : public SM83GenSubtargetInfo {
  virtual void anchor();
  SM83FrameLowering FrameLowering;
  SM83InstrInfo InstrInfo;
  SM83RegisterInfo RegInfo;
  SM83TargetLowering TLInfo;

  // autogenerated by tablegen
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

public:
  // Initializes the data members to match that of the specified triple.
  SM83Subtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
                const TargetMachine &TM);

  const SM83FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const SM83InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const SM83RegisterInfo *getRegisterInfo() const override { return &RegInfo; }
  const SM83TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  // TODO: GlobalISel API getters
};
} // namespace llvm

#endif
